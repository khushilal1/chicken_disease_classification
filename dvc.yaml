# stages:
#   data_ingestion:
#     cmd: python src/cnnClassifier/pipelin/stage_1_data_ingestion.py
#     deps: -src/cnnClassifier/pipeline/stage_1_data_ingestion.py
#       -config/config.yaml

#     outs: -artifacts/data_ingestion/Chicken-fecal-images

#   prepare_base_model:
#     cmd: python src/cnnClassifier/pipeline/stage_2_prepare_base_model.py
#     deps: -src/cnnClassifier/pipelin/stage_2_prepare_base_model.py
#       -config/config.yaml

#     params: -IMAGE_SIZE
#       -INCLUDE_TOP
#       -CLASSES
#       -WEIGHTS
#       -LEARNING_RATE

#     outs: -artifacts/prepare_base_model

#   training:
#     cmd: python src/cnnClassifier/pipeline/stage_3_training.py
#     deps: -src /cnnClassifier/pipeline/stage_3_training.py
#       -src/cnnClassifier/components/prepare_callbacks.py
#       -config/config.yaml
#       -artifacts/data_ingestion/Chicken-fecal-images
#       -artifacts/prepare_base_model

#     params: -IMAGE_SIZE
#       -EPOCH
#       -BATCH_SIZE
#       -AUGMENTATAION

#     outs: -artifacts/training/model.h5

#   evaluation:
#     cmd: python src/cnnClassifier/pipeline/stage_4_evaluation.py

#     deps: -src/cnnClassifier/pipeline/stage_4_evaluation.py
#       -config/config.yaml
#       -artifacts/data_ingestion/Chicken-fecal-images
#       -artifacts/training/model.h5

#     params: -IMAGE_SIZE
#       -BATCH_SIZE

#     metrics:
#       - scores.json:
#           cache: false




stages:
  # Stage 1: Data Ingestion
  data_ingestion:
    cmd: python src/cnnClassifier/pipeline/stage_1_data_ingestion.py
    deps:
      - src/cnnClassifier/pipeline/stage_1_data_ingestion.py
      - config/config.yaml
    outs:
      - artifacts/data_ingestion/Chicken-fecal-images

  # Stage 2: Prepare Base Model
  prepare_base_model:
    cmd: python src/cnnClassifier/pipeline/stage_2_prepare_base_model.py
    deps:
      - src/cnnClassifier/pipeline/stage_2_prepare_base_model.py
      - config/config.yaml
    params:
      - IMAGE_SIZE
      - INCLUDE_TOP
      - CLASSES
      - WEIGHTS
      - LEARNING_RATE
    outs:
      - artifacts/prepare_base_model

  # Stage 3: Training
  training:
    cmd: python src/cnnClassifier/pipeline/stage_3_training.py
    deps:
      - src/cnnClassifier/pipeline/stage_3_training.py
      - src/cnnClassifier/components/prepare_callbacks.py
      - config/config.yaml
      - artifacts/data_ingestion/Chicken-fecal-images
      - artifacts/prepare_base_model
    params:
      - IMAGE_SIZE
      - EPOCH
      - BATCH_SIZE
      - AUGMENTATION
    outs:
      - artifacts/training/model.h5

  # Stage 4: Evaluation
  evaluation:
    cmd: python src/cnnClassifier/pipeline/stage_4_evaluation.py
    deps:
      - src/cnnClassifier/pipeline/stage_4_evaluation.py
      - config/config.yaml
      - artifacts/data_ingestion/Chicken-fecal-images
      - artifacts/training/model.h5
    params:
      - IMAGE_SIZE
      - BATCH_SIZE
    metrics:
      - scores.json:
          cache: false
